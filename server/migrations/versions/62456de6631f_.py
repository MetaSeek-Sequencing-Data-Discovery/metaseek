"""empty message

Revision ID: 62456de6631f
Revises: 
Create Date: 2017-06-26 14:56:05.230639

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '62456de6631f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('dataset', sa.Column('age', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('altitude', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('assembly', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('avg_read_length_maxrun', sa.Float(), nullable=True))
    op.add_column('dataset', sa.Column('baseA_count_maxrun', sa.BIGINT(), nullable=True))
    op.add_column('dataset', sa.Column('baseC_count_maxrun', sa.BIGINT(), nullable=True))
    op.add_column('dataset', sa.Column('baseG_count_maxrun', sa.BIGINT(), nullable=True))
    op.add_column('dataset', sa.Column('baseN_count_maxrun', sa.BIGINT(), nullable=True))
    op.add_column('dataset', sa.Column('baseT_count_maxrun', sa.BIGINT(), nullable=True))
    op.add_column('dataset', sa.Column('biomaterial_provider', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('bioproject_id', sa.String(length=40), nullable=True))
    op.add_column('dataset', sa.Column('biosample_id', sa.String(length=40), nullable=True))
    op.add_column('dataset', sa.Column('biosample_models', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('biosample_package', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('biosample_uid', sa.String(length=30), nullable=True))
    op.add_column('dataset', sa.Column('collection_time', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('db_source', sa.String(length=20), nullable=True))
    op.add_column('dataset', sa.Column('db_source_uid', sa.String(length=50), nullable=True))
    op.add_column('dataset', sa.Column('depth', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('dev_stage', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('download_size_maxrun', sa.BIGINT(), nullable=True))
    op.add_column('dataset', sa.Column('elevation', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('env_biome', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('env_feature', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('env_material', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('estimated_size', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('experimental_factor', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('expt_design_description', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('expt_id', sa.String(length=30), nullable=True))
    op.add_column('dataset', sa.Column('expt_link', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('expt_title', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('finishing_strategy', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('gc_percent_maxrun', sa.Float(), nullable=True))
    op.add_column('dataset', sa.Column('geo_loc_name', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('host_disease', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('instrument_model', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('isol_growth_condt', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('lat_lon', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('library_construction_method', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('library_construction_protocol', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('library_name', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('library_reads_sequenced_maxrun', sa.BIGINT(), nullable=True))
    op.add_column('dataset', sa.Column('library_screening_strategy', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('library_strategy', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('metadata_publication_date', sa.DateTime(), nullable=True))
    op.add_column('dataset', sa.Column('ncbi_taxon_id', sa.String(length=50), nullable=True))
    op.add_column('dataset', sa.Column('nuccore_link', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('nuccore_uids', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('num_replicons', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('num_runs_in_accession', sa.Integer(), nullable=True))
    op.add_column('dataset', sa.Column('organization_address', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('organization_contacts', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('organization_name', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('ploidy', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('project_name', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('propagation', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('ref_biomaterial', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('run_ids_maxrun', sa.String(length=30), nullable=True))
    op.add_column('dataset', sa.Column('run_quality_counts_maxrun', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('sample_attributes', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('sample_description', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('sample_id', sa.String(length=30), nullable=True))
    op.add_column('dataset', sa.Column('sample_type', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('sequencing_method', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('sex', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('specific_host', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('study_abstract', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('study_attributes', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('study_id', sa.String(length=30), nullable=True))
    op.add_column('dataset', sa.Column('study_links', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('study_title', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('study_type', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('study_type_other', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('submission_id', sa.String(length=30), nullable=True))
    op.add_column('dataset', sa.Column('subspecific_genetic_lineage', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('target_gene', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('target_subfragment', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('taxon_common_name', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('taxon_scientific_name', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('tissue', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('total_num_bases_maxrun', sa.BIGINT(), nullable=True))
    op.drop_column('dataset', 'download_size')
    op.drop_column('dataset', 'total_num_reads')
    op.drop_column('dataset', 'avg_percent_gc')
    op.drop_column('dataset', 'avg_read_length')
    op.drop_column('dataset', 'total_num_bases')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('dataset', sa.Column('total_num_bases', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('dataset', sa.Column('avg_read_length', mysql.FLOAT(), nullable=True))
    op.add_column('dataset', sa.Column('avg_percent_gc', mysql.FLOAT(), nullable=True))
    op.add_column('dataset', sa.Column('total_num_reads', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('dataset', sa.Column('download_size', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.drop_column('dataset', 'total_num_bases_maxrun')
    op.drop_column('dataset', 'tissue')
    op.drop_column('dataset', 'taxon_scientific_name')
    op.drop_column('dataset', 'taxon_common_name')
    op.drop_column('dataset', 'target_subfragment')
    op.drop_column('dataset', 'target_gene')
    op.drop_column('dataset', 'subspecific_genetic_lineage')
    op.drop_column('dataset', 'submission_id')
    op.drop_column('dataset', 'study_type_other')
    op.drop_column('dataset', 'study_type')
    op.drop_column('dataset', 'study_title')
    op.drop_column('dataset', 'study_links')
    op.drop_column('dataset', 'study_id')
    op.drop_column('dataset', 'study_attributes')
    op.drop_column('dataset', 'study_abstract')
    op.drop_column('dataset', 'specific_host')
    op.drop_column('dataset', 'sex')
    op.drop_column('dataset', 'sequencing_method')
    op.drop_column('dataset', 'sample_type')
    op.drop_column('dataset', 'sample_id')
    op.drop_column('dataset', 'sample_description')
    op.drop_column('dataset', 'sample_attributes')
    op.drop_column('dataset', 'run_quality_counts_maxrun')
    op.drop_column('dataset', 'run_ids_maxrun')
    op.drop_column('dataset', 'ref_biomaterial')
    op.drop_column('dataset', 'propagation')
    op.drop_column('dataset', 'project_name')
    op.drop_column('dataset', 'ploidy')
    op.drop_column('dataset', 'organization_name')
    op.drop_column('dataset', 'organization_contacts')
    op.drop_column('dataset', 'organization_address')
    op.drop_column('dataset', 'num_runs_in_accession')
    op.drop_column('dataset', 'num_replicons')
    op.drop_column('dataset', 'nuccore_uids')
    op.drop_column('dataset', 'nuccore_link')
    op.drop_column('dataset', 'ncbi_taxon_id')
    op.drop_column('dataset', 'metadata_publication_date')
    op.drop_column('dataset', 'library_strategy')
    op.drop_column('dataset', 'library_screening_strategy')
    op.drop_column('dataset', 'library_reads_sequenced_maxrun')
    op.drop_column('dataset', 'library_name')
    op.drop_column('dataset', 'library_construction_protocol')
    op.drop_column('dataset', 'library_construction_method')
    op.drop_column('dataset', 'lat_lon')
    op.drop_column('dataset', 'isol_growth_condt')
    op.drop_column('dataset', 'instrument_model')
    op.drop_column('dataset', 'host_disease')
    op.drop_column('dataset', 'geo_loc_name')
    op.drop_column('dataset', 'gc_percent_maxrun')
    op.drop_column('dataset', 'finishing_strategy')
    op.drop_column('dataset', 'expt_title')
    op.drop_column('dataset', 'expt_link')
    op.drop_column('dataset', 'expt_id')
    op.drop_column('dataset', 'expt_design_description')
    op.drop_column('dataset', 'experimental_factor')
    op.drop_column('dataset', 'estimated_size')
    op.drop_column('dataset', 'env_material')
    op.drop_column('dataset', 'env_feature')
    op.drop_column('dataset', 'env_biome')
    op.drop_column('dataset', 'elevation')
    op.drop_column('dataset', 'download_size_maxrun')
    op.drop_column('dataset', 'dev_stage')
    op.drop_column('dataset', 'depth')
    op.drop_column('dataset', 'db_source_uid')
    op.drop_column('dataset', 'db_source')
    op.drop_column('dataset', 'collection_time')
    op.drop_column('dataset', 'biosample_uid')
    op.drop_column('dataset', 'biosample_package')
    op.drop_column('dataset', 'biosample_models')
    op.drop_column('dataset', 'biosample_id')
    op.drop_column('dataset', 'bioproject_id')
    op.drop_column('dataset', 'biomaterial_provider')
    op.drop_column('dataset', 'baseT_count_maxrun')
    op.drop_column('dataset', 'baseN_count_maxrun')
    op.drop_column('dataset', 'baseG_count_maxrun')
    op.drop_column('dataset', 'baseC_count_maxrun')
    op.drop_column('dataset', 'baseA_count_maxrun')
    op.drop_column('dataset', 'avg_read_length_maxrun')
    op.drop_column('dataset', 'assembly')
    op.drop_column('dataset', 'altitude')
    op.drop_column('dataset', 'age')
    # ### end Alembic commands ###
